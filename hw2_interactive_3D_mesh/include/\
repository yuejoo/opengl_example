/////////////////////////////////////////////////////////////////////////
//
// ---------------------mesh.h--------------------------
// Mesh different object
/////////////////////////////////////////////////////////////////////////


#ifndef MESH_H
#define MESH_H

#include "Angel.h"
#include "mycolors.h"

//--------------------------------------------------------------------
//   generate a uncaped_cylinder
//
//--------------------------------------------------------------------
inline
void uncape_cylinder(const vec4& points[], const vec4& colors[], const GLfloat& height, const GLfloat& radius, const vec3& bottom, const int& segment, const int& Index, const int& colindex)
{
	for(int i=0; i<segment; i++)
	{

		GLfloat const d0= 2*M_PI/segment*(float)i;
		GLfloat const d1= 2*M_PI/segment*(float)(i+1);
		 
		points[Index]=vec4( bottom[0] +sin(d0)*radius, bottom[1]+cos(d0)*radius, bottom[2],1.0f);
		colors[Index]= vertex_colors[colindex];
		Index++;
		points[Index]=vec4( bottom[0] +sin(d1)*radius, bottom[1]+cos(d1)*radius, bottom[2],1.0f);
		colors[Index]= vertex_colors[colindex];
		Index++;

		points[Index]=vec4( bottom[0] +sin(d0)*radius, bottom[1]+cos(d0)*radius, bottom[2]+height,1.0f);
		colors[Index]= vertex_colors[colindex];
		Index++;
		points[Index]=vec4( bottom[0] +sin(d1)*radius, bottom[1]+cos(d0)*radius, bottom[2]+height,1.0f);
		colors[Index]= vertex_colors[colindex];
		Index++;
 
	}
}











#endif
